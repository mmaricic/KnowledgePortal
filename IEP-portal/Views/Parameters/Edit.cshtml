@model IEP_portal.Models.Parameters

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-heading" align="center">Edit paramaters</div>


@using (Html.BeginForm("Edit", "Parameters", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger", @align = "center" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group" style="margin-left:35px">
            @Html.LabelFor(model => model.K, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.K, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.K, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="margin-left:35px">
            @Html.LabelFor(model => model.M, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.M, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.M, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="margin-left:35px">
            @Html.LabelFor(model => model.E, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.E, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.E, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="margin-left:35px">
            @Html.LabelFor(model => model.S, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.S, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.S, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="margin-left:35px">
            @Html.LabelFor(model => model.G, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.G, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.G, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="margin-left:35px">
            @Html.LabelFor(model => model.P, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.P, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.P, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-4" align="right">
                <input type="submit" value="Save" class="btn new-button" />
            </div>
            <div class="col=md-6" align="left">
                <button onclick="location.href='/parameters'" type="button" class="btn new-button">
                    Cancel
                </button>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
